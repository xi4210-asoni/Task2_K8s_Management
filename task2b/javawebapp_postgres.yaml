apiVersion: apps/v1
kind: Deployment
metadata:
  name: javawebappdeploy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: javawebapp
  template:
    metadata:
      labels:
        app: javawebapp
    spec:
      containers:
        - name: javawebappcontainer
          image: xi4210asoni/java-web-server:0.1.0
          env:
            - name: POSTGRES_HOST
              value: postgresql
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: conn-secret
                  key: POSTGRES_PASSWORD
            - name: CONN
              valueFrom:
                secretKeyRef:
                  name: conn-secret
                  key: POSTGRES_CONN
          # resources:
          #   limits: 
          #     memory: 20Mi
          #   requests:
          #     memory: 10Mi
          ports:
            - containerPort: 8080
      volumes:
        - name: config-volume
          configMap:
            name: java-webapp-configs
      # limits:
      # resources:
      #   limits: 
      #     memory: 20Mi
      #   requests:
      #     memory: 10Mi


---
apiVersion: v1
kind: Service
metadata:
  name: javawebappsvc
spec:
  selector:
    app: javawebapp
  ports:
    - port: 8080 
    # - name: http
    #   port: 80
    #   targetPort: 8080
  # type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: conn-secret
                  key: POSTGRES_PASSWORD
            # - name: POSTGRES_DB
            #   value: mydb
          ports:
            - containerPort: 5432
#           volumeMounts:
#             - name: postgresql-volume
#               mountPath: /var/lib/postgresql/data
#       volumes:
#         - name: postgresql-volume
#           persistentVolumeClaim:
#             claimName: postgresql-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgresql
  ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
  type: ClusterIP


